#include<bits/stdc++.h>
#include<math.h>
using namespace std;
const int MAX=sqrt(1e9)+1;
vector<int>prime;//保存质数
bool flag[MAX];//保存标记
int main()
{
    for(int i=0;i<MAX;i++)
        flag[i]=true;//素数
    flag[0]=false;//非素数
    flag[1]=false;//非素数
    for(int i=2;i<MAX;i++){
        if(flag[i]==false)//非素数
            continue;
        if(flag[i]==true){//i是素数
            prime.push_back(i);
            for(int k=i*i;k<MAX;k+=i)
                flag[k]=false;//素数的倍数为非素数
        }
    }
    int n;
    while(cin>>n){
        bool tag=false;
        int cnt=0;
        for(int i=0;i<prime.size() && prime[i]<n;i++){
            while(n%prime[i]==0)//prime[i]是n的素因数
                {
                    cout<<"因素数："<<prime[i]<<" ";
                    n/=prime[i];
                    cnt++;
                }

        }
        if(n>1){//注意这里！
            cout<<"因素数："<<n<<" ";
        }
    cout<<cnt<<endl;

    }
    return 0;
}
